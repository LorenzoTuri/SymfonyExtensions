services:
  # Services used to serialize/deserialize in simpler ways doctrine entities
  lturi.serializer:
    alias: Lturi\SymfonyExtensions\Services\SerializerService
    public: true
  Lturi\SymfonyExtensions\Services\SerializerService:
    public: true
    autowire: true
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@service_container'

  lturi.entity_normalizer:
    alias: Lturi\SymfonyExtensions\Services\Normalizers\EntityNormalizer
    public: true
  Lturi\SymfonyExtensions\Services\Normalizers\EntityNormalizer:
    public: true
    autowire: true
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@service_container'
      - '@serializer.mapping.cache_class_metadata_factory'
      - '@serializer.name_converter.camel_case_to_snake_case'
      - '@property_accessor'
      - '@property_info'

  # Better manage of symfony exceptions, display errors with better graphic (prod) and different ways, example jsons
  lturi.http_exception:
    alias: Lturi\SymfonyExtensions\Services\HttpExceptionService
    public: true
  Lturi\SymfonyExtensions\Services\HttpExceptionService:
    public: true
    autowire: true
    arguments:
      - '@router.default'
      - '@service_container'
    tags:
      - { name: kernel.event_listener, event: kernel.exception }

  # Response services injected in routes params to display a formatted response
  lturi.api_response:
    alias: Lturi\SymfonyExtensions\Services\Response\ApiResponse
    public: true
  Lturi\SymfonyExtensions\Services\Response\ApiResponse:
    public: true
    autowire: true
    arguments: ~

  # Routes loader
  lturi.route_loader:
    alias: Lturi\SymfonyExtensions\Services\RouteLoader
    public: true
  Lturi\SymfonyExtensions\Services\RouteLoader:
    public: true
    autowire: true
    arguments: ["@service_container"]
    tags:
      - { name: routing.loader }

  # Controllers registering
  Lturi\SymfonyExtensions\Controller\Api\RoutesController:
    tags:
      - { name: controller.service_arguments }
  Lturi\SymfonyExtensions\Controller\Api\TranslationController:
    tags:
      - { name: controller.service_arguments }